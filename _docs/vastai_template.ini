# CONFIG
# Template Name
ComfyUI

# Template Description
ComfyUI Stable Diffusion GUI with node-based interface

# Docker Repository And Environment
# Image Path:Tag ---> Grab these from Docker Hub, GHCR, etc.
aidockorg/comfyui-cuda:latest

# Version Tag
latest

# Docker Options
-e HF_TOKEN="" -e CIVITAI_TOKEN="" -e WEB_ENABLE_HTTPS=true -e WEB_ENABLE_AUTH=true  -e COMFYUI_ARGS="" -e AUTO_UPDATE=false -e PROVISIONING_SCRIPT="https://raw.githubusercontent.com/ai-dock/comfyui/main/config/provisioning/default.sh" -e DATA_DIRECTORY=/workspace/ -e WORKSPACE=/workspace/ -e WORKSPACE_MOUNTED=force -e SYNCTHING_TRANSPORT_PORT_HOST=72299 -p 8384:8384 -p 72299:72299 -e JUPYTER_DIR=/ -p 22:22 -p 1111:1111 -p 8888:8888 -p 8188:8188 -e OPEN_BUTTON_TOKEN=1 -e OPEN_BUTTON_PORT=1111

# Ports
8384 TCP    
22 TCP
8888 TCP
72299 TCP
1111 TCP
8188 TCP

# Environment Variables
HF_TOKEN=""
CIVITAI_TOKEN=""
WEB_ENABLE_HTTPS=true
WEB_ENABLE_AUTH=true
COMFYUI_ARGS=""
AUTO_UPDATE=false
PROVISIONING_SCRIPT="https://raw.githubusercontent.com/ai-dock/comfyui/main/config/provisioning/default.sh"
DATA_DIRECTORY=/workspace/
WORKSPACE=/workspace/
WORKSPACE_MOUNTED=force
SYNCTHING_TRANSPORT_PORT_HOST=72299
JUPYTER_DIR=/
OPEN_BUTTON_TOKEN=1
OPEN_BUTTON_PORT=1111

# Select Launch Mode
Jupyter-python notebook + SSH # A browser based GUI with python editor, bash terminal and more. SSH as well.
NO = Use Jupyter Lab interface 
YES = Jupyter direct HTTPS - much faster, but requires first loading our TLS certificate in your browser (one-time).

# On-start Script
# Bash commands that are invoked whenever your instance starts, see FAQ/Docs for details.
env >> /etc/environment

/opt/ai-dock/bin/init.sh;

# Extra Filters (CLI Format: verified=true gpu_display_active=true...)
cpu_arch in ['amd64'] direct_port_count>=9

# Docker Repository Authentication
#Server
Server Name (i.e: docker.io)

# Docker Username
Docker Login Username

# Docker Password
Docker Login Password

# Disk Space
# Between 8 GB - 1024 TB
8 GB

# PUBLIC/PRIVATE
Public

# CLI Command
vastai create instance <OFFER_ID> --image aidockorg/comfyui-cuda:latest --env '-e HF_TOKEN="" -e CIVITAI_TOKEN="" -e WEB_ENABLE_HTTPS=true -e WEB_ENABLE_AUTH=true  -e COMFYUI_ARGS="" -e AUTO_UPDATE=false -e PROVISIONING_SCRIPT="https://raw.githubusercontent.com/ai-dock/comfyui/main/config/provisioning/default.sh" -e DATA_DIRECTORY=/workspace/ -e WORKSPACE=/workspace/ -e WORKSPACE_MOUNTED=force -e SYNCTHING_TRANSPORT_PORT_HOST=72299 -p 8384:8384 -p 72299:72299 -e JUPYTER_DIR=/ -p 22:22 -p 1111:1111 -p 8888:8888 -p 8188:8188 -e OPEN_BUTTON_TOKEN=1 -e OPEN_BUTTON_PORT=1111' --onstart-cmd 'env >> /etc/environment;;/opt/ai-dock/bin/init.sh;' --disk 32 --jupyter --ssh --direct

# READ ME
# ComfyUI

> The most powerful and modular stable diffusion GUI and backend.
>
> This UI will let you design and execute advanced stable diffusion pipelines using a graph/nodes/flowchart based interface

&mdash; <cite>Comfyanonymous</cite>

## Connecting to the Instance

This template provides access to your instance through both [Jupyter](https://docs.vast.ai/jupyter) and [SSH](https://docs.vast.ai/sshscp). Additionally, the `Open` button will connect you to the AI-Dock landing page, where you can access ComfyUI along with other useful features and tools for managing your instance.

HTTPS and token-based authentication are both enabled by default.

To avoid certificate errors in your browser, please follow the instructions for [installing the TLS certificate](https://docs.vast.ai/jupyter#yJ9X8) to allow secure HTTPS connections to your instance via its IP address.

After clicking the `Open` button, you will be automatically logged in to the landing page without being asked for credentials.

If you are not using the `Open` button, basic authentication is available. Your username will be `vastai`, and the password will be the value of the environment variable `OPEN_BUTTON_TOKEN`.

You can also find the token value by accessing a terminal (SSH/Jupyter) and executing `echo $OPEN_BUTTON_TOKEN` to print the value.

To make API requests, you should pass an `Authorization` header with the value of the `OPEN_BUTTON_TOKEN` as the `Bearer` token. For example:

```
curl -X POST https://[INSTANCE_IP]:[MAPPED_PORT]/endpoint
-H 'Authorization: Bearer <OPEN_BUTTON_TOKEN>'
...
```


Both TLS and authentication can be configured by modifying the environment variables `WEB_ENABLE_HTTPS` and `WEB_ENABLE_AUTH`, respectively.

## Configuring the Instance

Several useful environment variables are available to help you provision the container to your requirements.

| Environment Variable | Purpose |
| --- | --- |
| `AUTO_UPDATE` | Automatically update to the latest release at startup.  Default: `false` |
| `CF_TUNNEL_TOKEN` | Cloudflare Zero Trust token for domain name linking, WARP private networking, and advanced authentication mechanisms. | 
| `CIVITAI_TOKEN` | Authenticate Civitai downloads to access gated models. |
| `COMFYUI_ARGS` | Set ComfyUI's [launch arguments](https://github.com/comfyanonymous/ComfyUI/blob/master/comfy/cli_args.py). |
| `COMFYUI_REF` | Git reference for auto update. Accepts branch, tag or commit hash. Default: latest release |
| `HF_TOKEN` | Authenticate HuggingFace downloads to access gated models. |
| `PROVISIONING_SCRIPT` | URL of a script to download and run before launching ComfyUI. Copy the [default script](https://raw.githubusercontent.com/ai-dock/comfyui/main/config/provisioning/default.sh) to create your ownâ€”see how [below](#provisioning-scripts). |

__Do not save your template as public if you have included tokens or other secrets in the `Docker Options` field.__

Further instructions and configuration options are available at the [AI-Dock Base Image Wiki](https://github.com/ai-dock/base-image/wiki/2.0-Environment-Variables).

## Provisioning Scripts

The default provisioning script will download some popular models and custom nodes along with setting a default workflow. To better configure your instance, you should copy this script and make the necessary edits to download your preferred models and extensions. Afterward, upload it to a service like Gist or Pastebin, then update the __raw__ URL in the `PROVISIONING_SCRIPT` variable.

Note: The provisioning script can be any Bash-compatible shell script and must start with `#!/bin/bash`. Commands requiring elevated privileges should be prefixed with `sudo`.

If your template is marked as public, you can give it a suitable name and share it with friends, colleagues, and the wider community.

## Links

- [ComfyUI Repository](https://github.com/comfyanonymous/ComfyUI)
- [AI-Dock Image Documentation](https://github.com/ai-dock/comfyui)